version: '3'

services:
  nestjs-microservice-primary:
    container_name: nestjs-microservice-primary
    image: mongo:4.2.20
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'app']
    volumes:
      - mongo-primary-data:/data/db
      -  ./scripts/mongo/rs-init.sh:/scripts/mongo/rs-init.sh
    ports:
      - 27081:27017
    networks:
      mongo-network:
        ipv4_address: 10.5.0.5

  nestjs-microservice-secondary:
    container_name: nestjs-microservice-secondary
    image: mongo:4.2.20
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'app']
    volumes:
      - mongo-secondary-data:/data/db
    ports:
      - 27082:27017
    networks:
      mongo-network:
        ipv4_address: 10.5.0.6

  nestjs-microservice-tertiary:
    container_name: nestjs-microservice-tertiary
    image: mongo:4.2.20
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'app']
    volumes:
      - mongo-tertiary-data:/data/db
    ports:
      - 27083:27017
    networks:
      mongo-network:
        ipv4_address: 10.5.0.7
  postgres:
    container_name: nestjs-microservice-postgres
    image: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - nestjs-microservice-postgres:/data/postgres
      - ./scripts/postgres/create-database.sql:/docker-entrypoint-initdb.d/create-database.sql
    restart: always
  redis:
    container_name: nestjs-microservice-redis
    image: 'redis:alpine'
    volumes:
      - nestjs-microservice-redis:/data
    ports:
      - 6379:6379

volumes:
  nestjs-microservice-postgres:
  nestjs-microservice-redis:
  mongo-primary-data:
  mongo-secondary-data:
  mongo-tertiary-data:
networks: 
  mongo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16